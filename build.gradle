plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "1.1.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }
	maven { url "https://server.bbkr.space/artifactory/libs-release" }
    maven { url 'https://jitpack.io' }
}

loadProperties()

def loadProperties() {
    def configFile = file('config.groovy')
    def config = new ConfigSlurper().parse(configFile.toURL())
    project.ext.config = config
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modRuntimeOnly modImplementation("com.terraformersmc:modmenu:3.1.0")

    include modApi("me.shedaniel.cloth:cloth-config-fabric:6.2.57") {
        exclude(group: "net.fabricmc.fabric-api")
    }

	modImplementation 'com.github.Draylar:static-content:1.0.1'
    include 'com.github.Draylar:static-content:1.0.1'

	/*modImplementation 'com.github.Draylar:maybe-data:1.18-SNAPSHOT'
    include 'com.github.Draylar:maybe-data:1.18-SNAPSHOT'*/
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload) {
    token = config.modrinth.token
    projectId = config.modrinth.project.id
    versionNumber = project.mod_version
	releaseType = project.release_type
    uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
    addGameVersion(project.minecraft_version)
	changelog = new File('changelog.md').text
    addLoader('fabric')
}

curseforge {
    apiKey = config.curse.api_key
	project {
		id = config.curse.project.id
		changelogType = 'markdown'
		changelog = file('changelog.md')
		releaseType = project.release_type
		addGameVersion project.curse_minecraft_version
		addGameVersion "Fabric"

		relations {
			requiredLibrary 'fabric-api'
			optionalDependency 'cloth-config'
			optionalDependency 'modmenu'
		}

		mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")) {
			displayName = "[Fabric $project.minecraft_version] Companion bats $version"
		}

		afterEvaluate {
			uploadTask.dependsOn("remapJar")
		}
	}
}